# #MailSlurp API
#
##MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
#
#The version of the OpenAPI document: 6.5.2
#Contact: contact@mailslurp.dev
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 5.1.1
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for ::EmailVerificationControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "EmailVerificationControllerApi" do
  describe "test an instance of EmailVerificationControllerApi" do
    it "should create an instance of EmailVerificationControllerApi" do
      api_instance = ::EmailVerificationControllerApi.new
      # TODO expect(api_instance).to be_instance_of(::EmailVerificationControllerApi)
    end
  end

  # unit tests for delete_all_validation_requests
  # Delete all validation requests
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe "delete_all_validation_requests test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_validation_request
  # Delete a validation record
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe "delete_validation_request test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_validation_requests
  # Validate a list of email addresses. Per unit billing. See your plan for pricing.
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :page Optional page index in list pagination
  # @option opts [Int32] :size Optional page size for paginated result list.
  # @option opts [String] :sort Optional createdAt sort direction ASC or DESC
  # @option opts [String] :search_filter Optional search filter
  # @option opts [Time] :since Filter by created at after the given timestamp
  # @option opts [Time] :before Filter by created at before the given timestamp
  # @option opts [Bool] :is_valid Filter where email is valid is true or false
  # @return [PageEmailValidationRequest]
  describe "get_validation_requests test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for validate_email_address_list
  # Validate a list of email addresses. Per unit billing. See your plan for pricing.
  # @param validate_email_address_list_options 
  # @param [Hash] opts the optional parameters
  # @return [ValidateEmailAddressListResult]
  describe "validate_email_address_list test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
