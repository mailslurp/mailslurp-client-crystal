# #MailSlurp API
#
##MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
#
#The version of the OpenAPI document: 6.5.2
#
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 5.1.1
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for ::MissedEmailControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "MissedEmailControllerApi" do
  describe "test an instance of MissedEmailControllerApi" do
    it "should create an instance of MissedEmailControllerApi" do
      api_instance = ::MissedEmailControllerApi.new
      # TODO expect(api_instance).to be_instance_of(::MissedEmailControllerApi)
    end
  end

  # unit tests for get_all_missed_emails
  # Get all MissedEmails in paginated format
  # @param [Hash] opts the optional parameters
  # @option opts [String] :inbox_id Optional inbox ID filter
  # @option opts [Int32] :page Optional page index in list pagination
  # @option opts [String] :search_filter Optional search filter
  # @option opts [Int32] :size Optional page size in list pagination
  # @option opts [String] :sort Optional createdAt sort direction ASC or DESC
  # @return [PageMissedEmailProjection]
  describe "get_all_missed_emails test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_missed_email
  # Get MissedEmail
  # @param missed_email_id missedEmailId
  # @param [Hash] opts the optional parameters
  # @return [MissedEmail]
  describe "get_missed_email test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for wait_for_nth_missed_email
  # Wait for Nth missed email
  # Wait for 0 based index missed email
  # @param inbox_id Optional inbox ID filter
  # @param timeout Optional timeout milliseconds
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index&#x3D;1
  # @return [MissedEmail]
  describe "wait_for_nth_missed_email test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
