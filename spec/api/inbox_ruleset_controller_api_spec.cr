# #MailSlurp API
#
##MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
#
#The version of the OpenAPI document: 6.5.2
#Contact: contact@mailslurp.dev
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 5.1.1
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for ::InboxRulesetControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "InboxRulesetControllerApi" do
  describe "test an instance of InboxRulesetControllerApi" do
    it "should create an instance of InboxRulesetControllerApi" do
      api_instance = ::InboxRulesetControllerApi.new
      # TODO expect(api_instance).to be_instance_of(::InboxRulesetControllerApi)
    end
  end

  # unit tests for create_new_inbox_ruleset
  # Create an inbox ruleset
  # Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving
  # @param create_inbox_ruleset_options 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :inbox_id Inbox id to attach ruleset to
  # @return [InboxRulesetDto]
  describe "create_new_inbox_ruleset test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_inbox_ruleset
  # Delete an inbox ruleset
  # Delete inbox ruleset
  # @param id ID of inbox ruleset
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe "delete_inbox_ruleset test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_inbox_rulesets
  # Delete inbox rulesets
  # Delete inbox rulesets. Accepts optional inboxId filter.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :inbox_id Optional inbox id to attach ruleset to
  # @return [nil]
  describe "delete_inbox_rulesets test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_inbox_ruleset
  # Get an inbox ruleset
  # Get inbox ruleset
  # @param id ID of inbox ruleset
  # @param [Hash] opts the optional parameters
  # @return [InboxRulesetDto]
  describe "get_inbox_ruleset test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_inbox_rulesets
  # List inbox rulesets
  # List all rulesets attached to an inbox
  # @param [Hash] opts the optional parameters
  # @option opts [String] :inbox_id Optional inbox id to get rulesets from
  # @option opts [Int32] :page Optional page index in inbox ruleset list pagination
  # @option opts [Int32] :size Optional page size in inbox ruleset list pagination
  # @option opts [String] :sort Optional createdAt sort direction ASC or DESC
  # @option opts [String] :search_filter Optional search filter
  # @option opts [Time] :since Filter by created at after the given timestamp
  # @option opts [Time] :before Filter by created at before the given timestamp
  # @return [PageInboxRulesetDto]
  describe "get_inbox_rulesets test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for test_inbox_ruleset
  # Test an inbox ruleset
  # Test an inbox ruleset
  # @param id ID of inbox ruleset
  # @param inbox_ruleset_test_options 
  # @param [Hash] opts the optional parameters
  # @return [InboxRulesetTestResult]
  describe "test_inbox_ruleset test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for test_inbox_rulesets_for_inbox
  # Test inbox rulesets for inbox
  # Test inbox rulesets for inbox
  # @param inbox_id ID of inbox
  # @param inbox_ruleset_test_options 
  # @param [Hash] opts the optional parameters
  # @return [InboxRulesetTestResult]
  describe "test_inbox_rulesets_for_inbox test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for test_new_inbox_ruleset
  # Test new inbox ruleset
  # Test new inbox ruleset
  # @param test_new_inbox_ruleset_options 
  # @param [Hash] opts the optional parameters
  # @return [InboxRulesetTestResult]
  describe "test_new_inbox_ruleset test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
