# #MailSlurp API
#
##MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
#
#The version of the OpenAPI document: 6.5.2
#Contact: contact@mailslurp.dev
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 5.1.1
#

require "uri"

module 
  class SseControllerApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # @param x_api_key [String] 
    # @return [Array(String)]
    def stream_events(x_api_key : String)
      data, _status_code, _headers = stream_events_with_http_info(x_api_key)
      data
    end

    # @param x_api_key [String] 
    # @return [Array<(Array(String), Integer, Hash)>] Array(String) data, response status code and response headers
    def stream_events_with_http_info(x_api_key : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: SseControllerApi.stream_events ..."}
      end
      # verify the required parameter "x_api_key" is set
      if @api_client.config.client_side_validation && x_api_key.nil?
        raise ArgumentError.new("Missing the required parameter 'x_api_key' when calling SseControllerApi.stream_events")
      end
      # resource path
      local_var_path = "/sse"

      # query parameters
      query_params = Hash(Symbol, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["text/event-stream"])
      header_params["x-api-key"] = x_api_key

      # form parameters
      form_params = Hash(Symbol, String).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "Array(String)"

      # auth_names
      auth_names = ["API_KEY"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"SseControllerApi.stream_events",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: SseControllerApi#stream_events\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return Array(String).from_json(data), status_code, headers
    end
  end
end
