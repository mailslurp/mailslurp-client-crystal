# #MailSlurp API
#
##MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
#
#The version of the OpenAPI document: 6.5.2
#Contact: contact@mailslurp.dev
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 5.1.1
#

require "uri"

module 
  class OAuthConnectionApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create an OAuth connection
    # Configure an inbox for OAuth sync with MailSlurp
    # @param redirect_base [String] 
    # @param o_auth_connection_type [String] 
    # @return [CreateOAuthConnectionResult]
    def create_o_auth_connection(redirect_base : String, o_auth_connection_type : String, email_address : String?)
      data, _status_code, _headers = create_o_auth_connection_with_http_info(redirect_base, o_auth_connection_type, email_address)
      data
    end

    # Create an OAuth connection
    # Configure an inbox for OAuth sync with MailSlurp
    # @param redirect_base [String] 
    # @param o_auth_connection_type [String] 
    # @return [Array<(CreateOAuthConnectionResult, Integer, Hash)>] CreateOAuthConnectionResult data, response status code and response headers
    def create_o_auth_connection_with_http_info(redirect_base : String, o_auth_connection_type : String, email_address : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: OAuthConnectionApi.create_o_auth_connection ..."}
      end
      # verify the required parameter "redirect_base" is set
      if @api_client.config.client_side_validation && redirect_base.nil?
        raise ArgumentError.new("Missing the required parameter 'redirect_base' when calling OAuthConnectionApi.create_o_auth_connection")
      end
      # verify the required parameter "o_auth_connection_type" is set
      if @api_client.config.client_side_validation && o_auth_connection_type.nil?
        raise ArgumentError.new("Missing the required parameter 'o_auth_connection_type' when calling OAuthConnectionApi.create_o_auth_connection")
      end
      # verify enum value
      allowable_values = ["GOOGLE", "MICROSOFT"]
      if @api_client.config.client_side_validation && !allowable_values.includes?(o_auth_connection_type)
        raise ArgumentError.new("invalid value for \"o_auth_connection_type\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/oauth-connection"

      # query parameters
      query_params = Hash(Symbol, String).new
      query_params[:"redirectBase"] = redirect_base
      query_params[:"oAuthConnectionType"] = o_auth_connection_type
      query_params[:"emailAddress"] = email_address

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["*/*"])

      # form parameters
      form_params = Hash(Symbol, String).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CreateOAuthConnectionResult"

      # auth_names
      auth_names = ["API_KEY"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"OAuthConnectionApi.create_o_auth_connection",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OAuthConnectionApi#create_o_auth_connection\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CreateOAuthConnectionResult.from_json(data), status_code, headers
    end

    # Exchange authorization code for access token and create inbox
    # Exchange an OAuth code for an access token and create an inbox connection in MailSlurp
    # @param authorization_code [String] 
    # @param redirect_uri [String] 
    # @return [CreateOAuthExchangeResult]
    def exchange_authorization_token_and_create_or_update_inbox(authorization_code : String, redirect_uri : String)
      data, _status_code, _headers = exchange_authorization_token_and_create_or_update_inbox_with_http_info(authorization_code, redirect_uri)
      data
    end

    # Exchange authorization code for access token and create inbox
    # Exchange an OAuth code for an access token and create an inbox connection in MailSlurp
    # @param authorization_code [String] 
    # @param redirect_uri [String] 
    # @return [Array<(CreateOAuthExchangeResult, Integer, Hash)>] CreateOAuthExchangeResult data, response status code and response headers
    def exchange_authorization_token_and_create_or_update_inbox_with_http_info(authorization_code : String, redirect_uri : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: OAuthConnectionApi.exchange_authorization_token_and_create_or_update_inbox ..."}
      end
      # verify the required parameter "authorization_code" is set
      if @api_client.config.client_side_validation && authorization_code.nil?
        raise ArgumentError.new("Missing the required parameter 'authorization_code' when calling OAuthConnectionApi.exchange_authorization_token_and_create_or_update_inbox")
      end
      # verify the required parameter "redirect_uri" is set
      if @api_client.config.client_side_validation && redirect_uri.nil?
        raise ArgumentError.new("Missing the required parameter 'redirect_uri' when calling OAuthConnectionApi.exchange_authorization_token_and_create_or_update_inbox")
      end
      # resource path
      local_var_path = "/oauth-connection/oauth-exchange/google"

      # query parameters
      query_params = Hash(Symbol, String).new
      query_params[:"authorizationCode"] = authorization_code
      query_params[:"redirectUri"] = redirect_uri

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["*/*"])

      # form parameters
      form_params = Hash(Symbol, String).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CreateOAuthExchangeResult"

      # auth_names
      auth_names = ["API_KEY"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"OAuthConnectionApi.exchange_authorization_token_and_create_or_update_inbox",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OAuthConnectionApi#exchange_authorization_token_and_create_or_update_inbox\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CreateOAuthExchangeResult.from_json(data), status_code, headers
    end
  end
end
